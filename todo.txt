----- Version 1 -----
* Color code the REMAINING amounts of each expense type in budgetdata.py
    x Break out limit and remaining labels into two separate columns.
    - Make numeric portion of limit and remaining labels 'Money' objects
    - Add color coding functions to budgetdata.py
* Add extensive comments to every function 
* Update the README.
* Add TODO section of README for most current todo list items
* Update the first release. (windows will not be included)
* Find a way to make the program installable via 'sudo apt-get'
* Get some kind of feedback loop started.
* Get a few customers on board.

=== MONTHLY BUDGET UPDATE ===
* The database and save+restore model are the epicenter of my budget program


----- Version 2 -----
* Change PayPeriod object to Paycheck object. This is more appropriate. 
* Investigate the competition
* Add TODO section to the README
* Add date column to the 'Expense List'
* Allow the user to sort the columns of the 'Expense List'
* Migrate all buffer frame setups to the 'style.py' file
* Change payperiod classes so they force keyword arguments
* Change PayCheck var in 'payperiod.py' to use Money class.
* Color-code the 'Remaining Limit' row in the data column.
* Change base class so that it inherits from tk.Frame
* Allow user to specify where data will be stored
* Turn any method in the main GUI class that has its own embedded functions
  into a class and potentially move to its own file.
* Reassess the names of all GUI methods (should they have an underscore 
  prefacing their names?)
* Add option to delete an entire Pay-Period
* Clean up 'Budget Data' and seperate it into columns
* Add 'Preferences' dropdown which will allow the user to customize things
  such as which 'Expense Types' are relevant to him/her.
* Find Graphic Logo for program


----- Someday/Maybe Features ------
* Matplotlib pie chart statistics
* Provide the user advice on when they should split one of their common entries
  into a brand new category. (You should advice customers to be precise with 
  the 'Notes' section of their entries)
* If the user is overdue on certain categories, the category should flash red and get bolder
* Show user where he needs work, based on previous pay-periods. Maybe even 
  offer user links to articles that could help him lower his expenses in his 
  problemed categories.
* Make monthly bills budget automatically.
* Add quote of the day about money!
* Add Savings tracker. It will be just like the one you use for college, 
  updatable on a monthly basis. 
* Add '$$$ Awareness Meter.' You would need to give the user an option to
  mark pay-period as 'Completed' or 'Not Completed'
